3

2

1

3

6
3 4

15
3 4

14
3 4

10

11

12

13

4
3 4 10 true

13

4
3 4 9 true

3

13

14
3 4

8
3 4

7
3 4

3

9
3 4

4
3 4 2 true

4
3 5 9 true

3

12

13

4
0 0 2 false

13

7
0 0

13

14
0 0

15
0 0

8
0 0

0


Explicación:

Escribe las medidas n del tablero
3 //introducimos el tamaño del tablero de sudoku, que en este caso es 3, lo que implica que es un tablero de 9x9

2 //nos indica de que tamaño es cada lado del tablero getNN

1 //nos indica el tamaño del lado de cada cuadrado del sudoku

3 //mostramos inicialmente la table vacía, toda llena de 0

6 //intentamos fijar la celda 3 4, pero como está vacía nos salta una excepción y no se fija
Introduce X, Y
3 4

15 //comprobamos que la celda del caso anterior no se ha fijado
3 4

14 //comprobamos que realmente está vacía
3 4

10 //usamos el método getAncho, que en el caso del tablero de sudoku es lo mismo que utilizar el método getNN

11 //igual que el caso anterior pero con el método getAlto()

12 //nos aseguramos que el tablero realmente es de 9x9 al ver el número total de celdas que este contiene

13 //nos aseguramos que inicialmente todo el tablero está vacío, y que el número de celdas rellenas es 0

4 //intentamos introducir un valor que está fuera del rango de valores posibles en un sudoku 9x9 para comprobar que no lo acepte como válido
Introduce X, Y, valor y fija
3 4 10 true

13 //nos sirve para comprobar que el caso anterior no ha añadido el valor no válido, ni se ha modificado el número de celdas rellenas

4 //en esta ocasión, introducimos un número válido y lo marcamos como fijo
Introduce X, Y, valor y fija
3 4 9 true

3 //mostramos gráficamente que el número se ha añadido en su celda correspondiente

13 //vemos si se ha actualizado el total de celdas rellenas tras añadir un número válido

14 //nos aseguramos que la celda 3 4 no está vacía
3 4

8 //hacemos un get numero de la posición 3 4 para ver que el valor 9 se ha introducido correctamente
Introduce X, Y
3 4

7 //intentamos borrar el contenido de la posición 3 4, para comprobar si nos permite borrar el contenido de una celda fija
Introduce X, Y
3 4

3

9 //en este caso hacemos pruebas para ver si nos permite trabajar sobre una celda fija (sobreescribir su contenido o borrarlo)
Introduce X, Y
3 4

4 //igual que el caso anterior
Introduce X, Y, valor y fija
3 4 2 true

4
Introduce X, Y, valor y fija
3 5 9 true

3

12 //vemos que el número de celdas totales no se ha modificado en ningún momento

13 //comprobamos que se ha actualizado correctamente el número de celdas rellenas

4 //introducimos un valor a una celda y no la hacemos fija para hacer pruebas sobre ella
Introduce X, Y, valor y fija
0 0 2 false

13 //vemos que, aunque no sea fija se modifica realmente el número de celdas rellenas

7 //borramos el valor de la celda no fija
Introduce X, Y
0 0

13 //se ha actualizado correctamente el número de celdas rellenas tras borrar el contenido de una de ellas

14 //nos aseguramos que realmente esta celda está vacía
0 0

15 //vemos que no está fijada
0 0

8 //hacemos un get de la celda para ver que el contenido de esta realmente se ha borrado
Introduce X, Y
0 0

0